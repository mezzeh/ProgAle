# Progettazione Software - Sistema di Gestione Piano Studi

## 1. Architettura del Sistema

### Pattern Architetturale
Propongo un'architettura a tre livelli (Three-Tier Architecture):
- **Presentation Layer**: Interfaccia utente per l'interazione con lo studente
- **Business Logic Layer**: Logica applicativa che gestisce le operazioni
- **Data Layer**: Gestione della persistenza dei dati

### Modello di Design
- Pattern MVC (Model-View-Controller) per separare dati, presentazione e logica

## 2. Modello dei Dati

### Entità principali e relazioni
1. **PianoDiStudio**
   - Attributi: ID, nome, descrizione, dataCreazione
   - Relazioni: contiene più Esami (one-to-many)

2. **Esame**
   - Attributi: ID, nome, codice, crediti, descrizione
   - Relazioni: appartiene a un PianoDiStudio, contiene più Argomenti (one-to-many)

3. **Argomento**
   - Attributi: ID, titolo, descrizione, livelloImportanza (1-5)
   - Relazioni: appartiene a un Esame, contiene SottoArgomenti, collegato a EserciziPrecedenti

4. **SottoArgomento**
   - Attributi: ID, titolo, descrizione, livelloProfondità
   - Relazioni: appartiene a un Argomento, contiene Esercizi

5. **Esercizio**
   - Attributi: ID, titolo, testo, soluzione, difficoltà
   - Relazioni: appartiene a un SottoArgomento, ha Requisiti

6. **Requisito**
   - Attributi: ID, descrizione
   - Relazioni: appartiene a un Esercizio

7. **Formula**
   - Attributi: ID, nome, espressione, descrizione, immagine
   - Relazioni: può essere associata ad Argomenti e SottoArgomenti

## 3. Componenti del Sistema

### Gestori delle Entità
1. **Gestore PianoDiStudio**
   - Responsabilità: CRUD per piani di studio
   - Principali funzioni: crea, modifica, elimina, cerca, elenca

2. **Gestore Esami**
   - Responsabilità: CRUD per esami
   - Principali funzioni: crea, modifica, elimina, cerca, elenca, associa a piano

3. **Gestore Argomenti**
   - Responsabilità: CRUD per argomenti
   - Funzioni: crea, modifica, elimina, cerca, gestisce ramificazioni

4. **Gestore SottoArgomenti**
   - Responsabilità: CRUD per sottoargomenti
   - Funzioni: crea, modifica, elimina, gestisce livelli di profondità

5. **Gestore Esercizi**
   - Responsabilità: CRUD per esercizi
   - Funzioni: crea, modifica, elimina, assegna a sottoargomenti, collega a requisiti

6. **Gestore Formule**
   - Responsabilità: CRUD per formule
   - Funzioni: crea, modifica, elimina, cerca, associa a argomenti/sottoargomenti

### Servizi Trasversali
1. **Servizio di Ricerca**
   - Responsabilità: ricerca avanzata su tutte le entità
   - Funzioni: ricerca per parole chiave, filtri, ordinamento

2. **Servizio di Navigazione**
   - Responsabilità: navigazione della struttura ramificata
   - Funzioni: espandi/collassa ramificazioni, visualizza percorsi

## 4. Diagramma delle Classi UML

```
+----------------+       +---------------+       +----------------+
| PianoDiStudio  |1-----*| Esame         |1-----*| Argomento      |
+----------------+       +---------------+       +----------------+
| -id            |       | -id           |       | -id            |
| -nome          |       | -nome         |       | -titolo        |
| -descrizione   |       | -codice       |       | -descrizione   |
| -dataCreazione |       | -crediti      |       | -importanza    |
+----------------+       | -descrizione  |       +--------+-------+
                         +---------------+                |
                                                          |
                                                          |1
                                                          |
                                                          *
                                                +-------------------+
         +-------------+1                      *| SottoArgomento    |
         | Requisito   |---------------------+--+-------------------+
         +-------------+                     |  | -id               |
         | -id         |                     |  | -titolo           |
         | -descrizione|                     |  | -descrizione      |
         +-------------+                     |  | -livelloProfondita|
                                             |  +-------------------+
                                             |            |1
                                             |            |
                                             |            *
                                             |  +-------------------+
                                             *  | Esercizio         |
                                            +---+-------------------+
                                                | -id               |
                                                | -titolo           |
                                                | -testo            |
                                                | -soluzione        |
                                                | -difficoltà       |
                                                +-------------------+
```

## 5. Casi d'Uso Principali

1. **Inserimento Piano di Studio**
   - Attore: Studente
   - Flusso base: Studente inserisce nome e descrizione → Sistema valida dati → Sistema crea piano

2. **Gestione Esami**
   - Attore: Studente
   - Flusso base: Studente seleziona piano → Inserisce dati esame → Sistema associa esame al piano

3. **Creazione Ramificazione di Argomenti**
   - Attore: Studente
   - Flusso base: Studente seleziona esame → Crea argomento → Aggiunge sottoargomenti → Sistema crea ramificazione

4. **Inserimento e Associazione Esercizi**
   - Attore: Studente
   - Flusso base: Studente seleziona sottoargomento → Inserisce esercizio → Aggiunge requisiti → Sistema registra collegamenti

5. **Navigazione Ramificazioni**
   - Attore: Studente
   - Flusso base: Studente seleziona entità → Naviga verso il basso/alto → Visualizza contenuti → Espande/comprime ramificazioni

## 6. Interfacce del Sistema

### Interfacce Principali
1. **Dashboard Principale**
   - Mostra piani di studio disponibili
   - Accesso rapido a funzioni principali
   - Area di ricerca

2. **Visualizzatore Ramificazioni**
   - Visualizzazione gerarchica del piano di studi
   - Possibilità di espandere/comprimere nodi
   - Indicatori visivi per priorità/importanza

3. **Editor di Contenuti**
   - Form per inserimento/modifica di ogni tipo di entità
   - Supporto per contenuti formattati e formule

4. **Visualizzatore Esercizi**
   - Visualizzazione esercizi per un dato argomento
   - Filtri per difficoltà, requisiti, etc.

## 7. Considerazioni Implementative

1. **Persistenza Dati**
   - Database relazionale per struttura gerarchica
   - Indici ottimizzati per ricerca veloce

2. **Scalabilità**
   - Design modulare per aggiungere nuovi tipi di contenuti
   - Cache per migliorare performance di navigazione

3. **Estensibilità**
   - API per possibile integrazione con altri sistemi
   - Supporto per plugin di terze parti

4. **Sicurezza**
   - Autenticazione e autorizzazione utenti
   - Validazione input per prevenire iniezioni


Codificare. 
sex
